import { always, ValueObject } from '@lubowiecki/ts-utility';

import { <%= classify(name) %>Props } from './<%= dasherize(name) %>-props';
import { is<%= classify(name) %>Props } from './is-<%= dasherize(name) %>-props';

export class <%= classify(name) %> extends ValueObject<<%= classify(name) %>Props> {
	constructor(protected readonly props: <%= classify(name) %>Props) {
		super(props);
	}

	static create(props: <%= classify(name) %>Props): <%= classify(name) %> {
		always(is<%= classify(name) %>Props(props), '');

		return new <%= classify(name) %>(props);
	}
}
